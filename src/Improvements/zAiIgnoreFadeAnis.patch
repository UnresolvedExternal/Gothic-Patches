// Fade animations should not be taken into account in the controller or AI logic:
// they are only needed for visual smoothness.
//
// Currently, only the following functions caused problems (with other patches):
// 1) oCAniCtrl_Human::IsStateAniActive - in BowMode (run to stand)
// 2) oCAniCtrl_Human::IsWalking - attack-run instead of attack
// 3) zCModel::StartAni - fading already faded animation instead of an active one
// 4) oCAniCtrl_Human::PC_JumpForward - run-jump instead of stand-jump
// 5) Tweak: stop the fading animation immedeatly if the same animation is requested to start
// 6) zCModelNodeInst::CalcWeights - fading animation gets stopped if it has no weight at least in one node
// 7) oCAniCtrl_Human::_Stand - suppress a jump

#engine [G1, G1A, G2, G2A]
	#patch [zAiIgnoreFadeAnis]
		// engine specific
		INT text_oCAIHuman_BowMode_call_IsStanding_G1 = ZenDef(0x00610A59, 0x00633794, 0x00639BFE, 0x0069636A)
		INT text_oCAIHuman_BowMode_call_IsStanding_G2 = ZenDef(0x00000000, 0x00000000, 0x0063A03B, 0x006968C9)
		INT text_oCAniCtrl_Human_IsStateAniActive_cmp_layer = ZenDef(0x006255AC, 0x0064A2DC, 0x0065162C, 0x006ADEAC)
		INT text_oCAniCtrl_Human_IsStateAniActive_fail_cmp_layer = ZenDef(0x006255BB, 0x0064A2EB, 0x0065163B, 0x006ADEBB)
		INT text_oCAniCtrl_Human_PC_JumpForward_call_zCModel_IsAniActive = ZenDef(0x00628CD0, 0x0064DF02, 0x006554B0, 0x006B1E40)
		INT text_oCAniCtrl_Human__Stand_cmp_protoAni__s_walkl = ZenDef(0x0062DE29, 0x006535FE, 0x0065AC39, 0x006B75C9)
		INT text_oCAniCtrl_Human__Stand_success_cmp_protoAni__s_walkl = ZenDef(0x0062DE78, 0x0065364A, 0x0065AC88, 0x006B7618)
		INT text_oCAniCtrl_Human_CorrectAniStates_mov_reg_protoAni = ZenDef(0x006229E8, 0x00647198, 0x0064E878, 0x006AB0F8)
		INT text_oCAniCtrl_Human_CorrectAniStates_continue_search = text_oCAniCtrl_Human_CorrectAniStates_mov_reg_protoAni + 7
		INT text_oCAniCtrl_Human_DrawWeapon1_call_zCModel_GetAniFromAniID = ZenDef(0x006294CA, 0x0064E73A, 0x00655CAA, 0x006B263A)
		INT text_oCAniCtrl_Human_DrawWeapon1_test_eax_eax = ZenDef(0x006294D7, 0x0064E747, 0x00655CB7, 0x006B2647)
		INT text_zCModelNodeInst_CalcWeights_jne_blendState_2_1 = ZenDef(0x0056559B, 0x0057DF25, 0x0057A0FB, 0x0057F61B)
		INT text_zCModelNodeInst_CalcWeights_jne_blendState_2_2 = ZenDef(0x005655DB, 0x0057DF75, 0x0057A13B, 0x0057F65B)
		INT text_zCModel_AdvanceAnis_afterNodesBlending = ZenDef(0x00563817, 0x0057C062, 0x00578209, 0x0057D729)
		INT text_zCModel_StartAni_mov_ecx_protoAni = ZenDef(0x00561537, 0x00579C0B, 0x00575DD6, 0x0057B2F6)
		INT text_zCModel_StartAni_fail_cmp_layers = ZenDef(0x0056159D, 0x00579C7C, 0x00575E3C, 0x0057B35C)
		INT text_zCModel_StartAni_call_FadeOutAni = ZenDef(0x0056160C, 0x00579CEF, 0x00575EAB, 0x0057B3CB)
		INT text_zCModel_StartAni_call_FadeOutAni_end = text_zCModel_StartAni_call_FadeOutAni + 5
		INT text_zCModel_StartAni_cmp_startMode_2 = ZenDef(0x00561508, 0x00579BDC, 0x00575D98, 0x0057B2B8)
		INT text_zCModel_StartAni_cmp_startMode_2_end = text_zCModel_StartAni_cmp_startMode_2 + 18
		
		INT field_oCAniCtrl_Human__t_walk_2_aim = 0x10E8
		INT field_oCAniCtrl_Human__s_walkl = 0x1014
		INT field_oCAniCtrl_Human__s_walkr = 0x1020
		INT field_oCAniCtrl_Human__t_walk_2_walkl = 0x100C		
		INT field_zCModelAniActive_isFadingOut = 0x1C
		INT field_zTNodeAni_modelAni = 0x0
		INT field_zTNodeAni_weight = 0x4
		INT field_zTNodeAni_blendState = 0xC
		INT field_zCModelNodeInst_nodeAniList = 0xCC
		INT field_zCModelNodeInst_numNodeAnis = 0x18C
		INT field_zCModel_numActiveAnis = 0x34
		INT field_zCModel_aniChannels = 0x38
		INT field_zCModel_nodeList = ZenDef(0x64, 0x64, 0x70, 0x70)
		INT field_zCModel_nodeList_numInArray = field_zCModel_nodeList + 8
		INT field_zCAIPlayer_model = 0x68
		
		INT sizeof_zTNodeAni = 0x20
		
		INT func_oCAIHuman_Pressed = ZenDef(0x0060F920, 0x006323C0, 0x00638E70, 0x00695540)
		INT func_oCAniCtrl_Human_IsWalking = ZenDef(0x006257E0, 0x0064A540, 0x00651860, 0x006AE0E0)
		INT func_zCModel_GetActiveAni = ZenDef(0x00560D90, 0x00579220, 0x00575640, 0x0057AB60)
		INT func_zCModel_StopAni = ZenDef(0x00560EE0, 0x00579370, 0x00575790, 0x0057ACB0)
		
		INT const_GAME_ACTION = 5
		INT const_GAME_UP = 3
		INT const_GAME_DOWN = 4
		
		INT engine_version = ZenDef(1, 2, 3, 4)
		// end of engine specific
		
		#assembler [text_oCAniCtrl_Human_CorrectAniStates_mov_reg_protoAni]
			cmp dword ptr [esi+$field_zCModelAniActive_isFadingOut], 0
			jne $text_oCAniCtrl_Human_CorrectAniStates_continue_search
	
			orgcode
		#/assembler
		
		#assembler [text_oCAniCtrl_Human_IsStateAniActive_cmp_layer]
			orgcode
			
			push eax
			mov eax, [edx]
			mov eax, [eax+$field_zCModelAniActive_isFadingOut]
			test eax, eax
			pop eax
			
			jnz $text_oCAniCtrl_Human_IsStateAniActive_fail_cmp_layer
		#/assembler
		
		// int zCModel::IsAniNotFading(int)
		#assembler [func_zCModel_IsAniNotFading]			
			mov edx, [esp+4]
			
			push esi
			mov esi, ecx
			
			push edi
			mov edi, edx
			
			push edi
			call $func_zCModel_GetActiveAni
			
			test eax, eax
			jz return
			
			mov eax, [eax+$field_zCModelAniActive_isFadingOut]
			test eax, eax
			jnz fail
			
			mov eax, 1
			jmp return
			
		fail:
			xor eax, eax
			
		return:
			pop edi
			pop esi
			ret 4
		#/assembler
		
		#assembler [text_oCAIHuman_BowMode_call_IsStanding_G1]
			push ecx
			orgcode
			pop ecx
			
			test eax, eax
			jnz return
			
			mov eax, [ecx+$field_oCAniCtrl_Human__t_walk_2_aim]
			push eax
			mov ecx, [ecx+$field_zCAIPlayer_model]
			call $func_zCModel_IsAniNotFading
			
		return:
		#/assembler
		
		IF engine_version >= 3
			#assembler [text_oCAIHuman_BowMode_call_IsStanding_G2]
				orgcode
				
				test eax, eax
				jnz check_keys
				
				mov eax, [esi+$field_oCAniCtrl_Human__t_walk_2_aim]
				push eax
				mov ecx, [esi+$field_zCAIPlayer_model]
				call $func_zCModel_IsAniNotFading
				jmp return
				
			check_keys:
				push $const_GAME_ACTION
				mov ecx, esi
				call $func_oCAIHuman_Pressed
				test eax, eax
				jnz return
				
				push $const_GAME_UP
				mov ecx, esi
				call $func_oCAIHuman_Pressed
				test eax, eax
				jnz return_false
				
				push $const_GAME_DOWN
				mov ecx, esi
				call $func_oCAIHuman_Pressed
				test eax, eax
				mov eax, 1
				jz return
				
			return_false:
				xor eax, eax
			
			return:
			#/assembler
		END
		
		#assembler [text_oCAniCtrl_Human_DrawWeapon1_call_zCModel_GetAniFromAniID]
			call $func_zCModel_IsAniNotFading
		#/assembler [text_oCAniCtrl_Human_DrawWeapon1_test_eax_eax]
		
		// int oCAniCtrl_Human::HookIsWalking()
		#assembler [func_oCAniCtrl_Human_HookIsWalking]
			push esi
			push edi
			
			mov edi, [ecx+$field_zCAIPlayer_model]
			test edi, edi
			jz fail
			
			mov eax, [ecx+$field_oCAniCtrl_Human__t_walk_2_walkl]
			push eax
			
			mov eax, [ecx+$field_oCAniCtrl_Human__s_walkr]
			push eax
			
			mov eax, [ecx+$field_oCAniCtrl_Human__s_walkl]
			push eax
			
			mov esi, 2
			
		check:
			mov ecx, edi
			call $func_zCModel_IsAniNotFading
			
			test eax, eax
			jnz return

			test esi, esi
			jz fail
			
			dec esi
			jmp check
			
		fail:
			xor eax, eax
			
		return:
			lea esp, [esp+esi*4]
			
			pop edi
			pop esi
			ret
		#/assembler
		
		JMP(func_oCAniCtrl_Human_IsWalking, func_oCAniCtrl_Human_HookIsWalking)
		
		#assembler [text_oCAniCtrl_Human_PC_JumpForward_call_zCModel_IsAniActive]
			add esp, 4
			mov eax, [esi+$field_oCAniCtrl_Human__s_walkl]
			push eax
			call $func_zCModel_IsAniNotFading
		#/assembler
		
		#assembler [text_zCModel_StartAni_mov_ecx_protoAni]
			mov ecx, [eax]
			cmp ecx, ebp
			je continue
			
			mov ecx, [eax+$field_zCModelAniActive_isFadingOut]
			test ecx, ecx
			jnz $text_zCModel_StartAni_fail_cmp_layers
			
		continue:
			orgcode
		#/assembler
		
		#assembler [text_zCModel_StartAni_call_FadeOutAni]
			mov eax, [edi]			
			cmp eax, ebp
			jne continue
			
			call $func_zCModel_StopAni
			jmp $text_zCModel_StartAni_call_FadeOutAni_end
		
		continue:
			orgcode
		#/assembler
		
		#assembler [text_zCModel_StartAni_cmp_startMode_2]
			mov eax, [ebx+$field_zCModelAniActive_isFadingOut]
			test eax, eax
			jz continue
			
			push ebx
			mov ecx, esi
			call $func_zCModel_StopAni
			
			mov ecx, [esi+$field_zCModel_numActiveAnis]
			jmp $text_zCModel_StartAni_cmp_startMode_2_end
		
		continue:
			orgcode
		#/assembler
		
		// void zCModel::CheckFadeoutAnis()
		#assembler [func_zCModel_CheckFadeoutAnis]
			sub esp, 8 ; +8
			mov eax, ecx
			push ebp ; +12
			xor ebp, ebp
			mov [esp+4], eax
			cmp [eax+$field_zCModel_numActiveAnis], ebp
			jle return
	
			push ebx ; +16
			push esi ; +20
			lea ebx, [eax+$field_zCModel_aniChannels]
			xorps xmm1, xmm1
			push edi ; +24
			mov [esp+20], ebx
			
		mainLoop:
			mov esi, [ebx]
			cmp dword ptr [esi+$field_zCModelAniActive_isFadingOut], 0
			je continue
			
			xor edi, edi
			cmp [eax+$field_zCModel_nodeList_numInArray], edi
			jle innerLoopEnd
			
			mov ebx, [eax+$field_zCModel_nodeList]
			
		auxLoop:
			mov eax, [ebx]
			xor ecx, ecx
			mov edx, [eax+$field_zCModelNodeInst_numNodeAnis]
			test edx, edx
			jle auxLoopEnd
			
			add eax, $field_zCModelNodeInst_nodeAniList

		checkFaded:
			cmp [eax+$field_zTNodeAni_modelAni], esi
			jne auxLoopContinue
			
			cmp dword ptr [eax+$field_zTNodeAni_blendState], 2
			jne notFaded
			
			movss xmm0, [eax+$field_zTNodeAni_weight]
			comiss xmm0, xmm1
			ja notFaded
			
		auxLoopContinue:
			inc ecx
			add eax, $sizeof_zTNodeAni
			cmp ecx, edx
			jl checkFaded
			
		auxLoopEnd:
			mov eax, [esp+16]
			inc edi
			add ebx, 4
			cmp edi, [eax+$field_zCModel_nodeList_numInArray]
			jl auxLoop
			
			mov ebx, [esp+20]
			
		innerLoopEnd:
			push esi ; +28
			mov ecx, eax
			call $func_zCModel_StopAni ; +24
			dec ebp
			xorps xmm1, xmm1
			sub ebx, 4
			jmp skipEbx
			
		notFaded:
			mov ebx, [esp+20]
			
		skipEbx:
			mov eax, [esp+16]
			
		continue:
			inc ebp
			add ebx, 4
			mov [esp+20], ebx
			cmp ebp, [eax+$field_zCModel_numActiveAnis]
			jl mainLoop
			
			pop edi ; +20
			pop esi ; +16
			pop ebx ; +12
			
		return:
			pop ebp ; +8
			add esp, 8 ; +0
			ret
		#/assembler
		
		HEX @text_zCModelNodeInst_CalcWeights_jne_blendState_2_1 = 'EB'
		HEX @text_zCModelNodeInst_CalcWeights_jne_blendState_2_2 = 'EB'
		
		#assembler [text_zCModel_AdvanceAnis_afterNodesBlending]
			mov ecx, ebx
			call $func_zCModel_CheckFadeoutAnis
			orgcode
		#/assembler
		
		IF engine_version == 2
			#assembler [text_oCAniCtrl_Human__Stand_cmp_protoAni__s_walkl]
				cmp [edi], eax
				jne continue
				
				cmp dword ptr [edi+$field_zCModelAniActive_isFadingOut], 0
				je $text_oCAniCtrl_Human__Stand_success_cmp_protoAni__s_walkl
				
			continue:
				//orgcode+4
				inc ecx
			#/assembler
		ELSE
			#assembler [text_oCAniCtrl_Human__Stand_cmp_protoAni__s_walkl]
				cmp [ebp], eax
				jne continue
				
				cmp dword ptr [ebp+$field_zCModelAniActive_isFadingOut], 0
				je $text_oCAniCtrl_Human__Stand_success_cmp_protoAni__s_walkl
				
			continue:
			#/assembler
		END
	#/patch
#/engine
